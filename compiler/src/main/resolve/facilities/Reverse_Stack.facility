Facility Reverse_Stack;
    Facility SF is Bdd_Stack_Template
        <Std_Integer_Fac::Integer>(3) implemented by Array_Impl;
    (*public static final Bdd_Stack_Template SF =
        new Array_Impl(((Integer_Template)Standard_Integers.INSTANCE).initInteger(),
         ((Integer_Template)Standard_Integers.INSTANCE).initInteger(3), new Array_Impl.Foo() {
            @Override public Object getRep() {
                return null;
            }

            @Override public void setRep(Object setRep) {
            }

            @Override public RType initialValue() {
                return null;
            }

            @Override public RType Foo(RType x) {
                return Eh(x);
            }

        });*)
    Operation Read_Stack (replaces S: SF::Stack);
        Procedure
            Var CS, RC: Std_Integer_Fac::Integer;
            SF::Clear(S);
            RC := SF::Rem_Capacity(S);

            While RC > 0
                maintaining true;
            do
                Std_Integer_Fac::Read(CS);
                SF::Push(CS, S);
                RC := SF::Rem_Capacity(S);
            end;
    end Read_Stack;

    Operation Write_Stack (clears S: SF::Stack);
        Procedure
            Var Temp: Std_Integer_Fac::Integer;
            Var D: Std_Integer_Fac::Integer;

            D := SF::Depth(S);
            While D /= 0
                maintaining true;
            do
                SF::Pop(Temp, S);
                Std_Integer_Fac::Write_Line(Temp);
                D := SF::Depth(S);
            end;
    end Write_Stack;

    Operation Main();
    	Procedure
    		Var S: SF::Stack;
    		Read_Stack(S);
    		Write_Stack(S);
    end Main;
end Reverse_Stack;
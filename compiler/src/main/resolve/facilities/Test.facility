Facility Test;

    Type Blah = Record
            v, b: Std_Boolean_Fac::Boolean;
        end;
        initialization ensures v = true and b = true;

    Type Student_Info = Record
            enrolled: Std_Boolean_Fac::Boolean;
            gpa: Std_Integer_Fac::Integer;
            something: Blah;
        end;

    Oper Foo(evaluates g: Std_Boolean_Fac::Boolean;
             evaluates h: Student_Info): Std_Integer_Fac::Integer;
        Procedure
        Var x: Student_Info;
        Var y: Std_Boolean_Fac::Boolean;
        Var b: Blah;
        y := x.enrolled;
        Foo := x.gpa;
    end Foo;

    Oper Main();
        Procedure
            Var a: Std_Boolean_Fac::Boolean;
            Var b: Std_Integer_Fac::Integer;
            Var c: Student_Info;
            Var x : Blah;
            c.enrolled := Std_Boolean_Fac::False();
            b := Foo(a, c);
    end Main;

end Test;
Concept Queue_Template<E>(evaluates Max_Length : Std_Integer_Fac :: Integer);
    uses Basic_Natural_Number_Theory, Standard_Integers,
            String_Theory, Basic_Integer_Theory;
    requires 1 <= Max_Length;

    Type Family Queue is modeled by Str(E);
        exemplar Q;
		constraints |Q| <= Max_Length;
		initialization ensures Q = Empty_String;

    Operation Enqueue(alters e : E; updates Q : Queue);
        requires 1 + |Q| <= Max_Length;
        ensures Q = @Q o <@e>;

    Operation Dequeue(replaces e : E; updates Q : Queue);
        requires 1 <= |Q|;
        ensures @Q = <e> o Q;

    Operation Swap_First_Entry(updates e : E; updates Q : Queue);
        requires 1 <= |Q|;
        ensures E = DeString(Prt_Btwn(0, 1, @Q)) and
                Q = <@e> o Prt_Btwn(1, |@Q| - 1, @Q);

    Operation Length(restores Q : Queue): Std_Integer_Fac :: Integer;
        ensures Length = (|Q|);

    Operation Rem_Capacity(restores Q : Queue) : Std_Integer_Fac :: Integer;
        ensures Rem_Capacity = (Max_Length - |Q|);

    Operation Clear(clears Q : Queue);

end Queue_Template;
Implementation Store_Do_Nothing_Impl
            for
        Store_Do_Nothing_Capability
            of Search_Store_Template

    Procedure Do_Nothing
            (restores S : Store)
        Var x : T
        Remove_Any(S, x)
        Add(S, x)
    end Do_Nothing
end Store_Do_Nothing_Impl






















/*
apply procedure decl rule

C / assume S /= {}
        Var Temp : T
        Add(Temp, S)
        Remove(Temp, S)
    confirm S = @S
-------------------
1. apply explicit call rule (Remove)

C / assume S /= {}
        Var Temp : T
        Add(Temp, S)
    confirm e is_in S[e -> Temp, S -> S] and
            S = @S[S -> @S ~ {e}[e -> Temp, @S -> S]]
                   Temp -> @S ~ {e}[e -> Temp, @S -> S]
------------------- SIMPL
C / assume S /= {}
        Var Temp : T
        Add(Temp, S)
    confirm Temp is_in S and (S ~ {Temp}) = @S
-------------------
2. apply explicit call rule (Add)

C / assume S /= {};
        Var Temp : T;
    confirm ||S|| < Max_Capacity [e -> Temp, S -> S] and
        Temp is_in S and (S ~ {Temp}) = @S [S -> @S union {e}[e -> Temp, @S -> S]]
------------------- SIMPL
C / assume S /= {};
        Var Temp : T;
    confirm ||S|| < Max_Capacity and Temp is_in S union {Temp} and
            S union {Temp} ~ {Temp}) = @S

    confirm ||S|| < Max_Capacity and Temp is_in S union {Temp} and
        S union {Temp} ~ {Temp} = @S;
*/
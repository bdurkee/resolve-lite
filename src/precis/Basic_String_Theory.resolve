Precis Basic_String_Theory;
	uses Basic_Natural_Number_Theory;

	Definition Is_String_Former
			(SStr : Cls, Λ : SStr, ext : SStr * El -> SStr) : B;
	 	/*is Pty1: ∀ α, β : SStr, */

	Categorical Definition for 
				SStr : Cls, Λ : SStr, ext : SStr * El -> SStr is 
		Is_String_Former(SStr, Λ, ext);
	
	Inductive Definition (β : SStr) ∘ (α : SStr) : SStr is		/* String concatenation */
        (i.)  α ∘ Λ = α;
        (ii.) ∀ x : El, α ∘ ext(β, x) = ext(α ∘ β, x);

	Inductive Definition |(x : SStr)| : ℕ is
	    (i.)  |Λ| = 0;
	    (ii.) ∀ α : SStr, |ext(α, x)| = suc(|α|);

    Corollary SL1: ∀ α, β : SStr, |α ∘ β| = (|α| + |β|);

	Definition ⟨(x : El)⟩ : B;

    Definition Iterated_Concatenation(m : ℕ, n : ℕ, F : ℕ->SStr) : SStr;

    Definition Reverse(s : SStr) : SStr;
end Basic_String_Theory;